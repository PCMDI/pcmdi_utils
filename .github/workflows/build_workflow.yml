name: CI/CD Build Workflow

on:
    push:
        branches: [main]

    pull_request:
        branches: [main]

    workflow_dispatch:

env:
    CANCEL_OTHERS: true
    PATHS_IGNORE: '["**/README.rst", "**/docs/**", "**/ISSUE_TEMPLATE/**", "**/pull_request_template.md", "**/.vscode/**"]'

jobs:
    pre-commit-hooks:
        runs-on: ubuntu-latest
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@master
              with:
                  cancel_others: ${{ env.CANCEL_OTHERS }}
                  paths_ignore: ${{ env.PATHS_IGNORE }}

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              name: Checkout Code Repository
              uses: actions/checkout@v3

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              name: Set up Python 3.10
              uses: actions/setup-python@v3
              with:
                  python-version: "3.10"

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              # Run all pre-commit hooks on all the files.
              # Getting only staged files can be tricky in case a new PR is opened
              # since the action is run on a branch in detached head state
              name: Install and Run Pre-commit
              uses: pre-commit/action@v3.0.0

    build:
        name: Build (Python ${{ matrix.python-version }})
        runs-on: "ubuntu-latest"
        defaults:
            run:
                shell: bash -l {0}
        strategy:
            matrix:
                python-version: ["3.9", "3.10", "3.11"]
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@master
              with:
                  cancel_others: ${{ env.CANCEL_OTHERS }}
                  paths_ignore: ${{ env.PATHS_IGNORE }}
                  do_not_skip: '["push", "workflow_dispatch"]'

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              uses: actions/checkout@v3

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              name: Cache Conda
              uses: actions/cache@v3
              env:
                  # Increase this value to reset cache if conda-env/ci.yml has not changed in the workflow
                  CACHE_NUMBER: 0
              with:
                  path: ~/conda_pkgs_dir
                  key: ${{ runner.os }}-${{ matrix.python-version }}-conda-${{ env.CACHE_NUMBER }}

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              name: Set up Conda Environment
              uses: conda-incubator/setup-miniconda@v2
              with:
                  activate-environment: "ci"
                  miniforge-variant: Mambaforge
                  miniforge-version: latest
                  use-mamba: true
                  mamba-version: "*"
                  environment-file: conda-env/ci.yml
                  channel-priority: strict
                  auto-update-conda: true
                  # IMPORTANT: This needs to be set for caching to work properly!
                  use-only-tar-bz2: true
                  python-version: ${{ matrix.python-version }}

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              name: Install Package to the CI Environment
              # Source: https://github.com/conda/conda-build/issues/4251#issuecomment-1053460542
              run: |
                  python -m pip install --no-build-isolation --no-deps -e .

            - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
              name: Run Tests
              run: |
                  pytest
